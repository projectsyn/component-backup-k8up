apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade,post-delete
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: '1'
  labels:
    app.kubernetes.io/instance: k8up
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: k8up
    helm.sh/chart: k8up-4.8.4
  name: cleanup-service-account
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade,post-delete
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: '2'
  labels:
    app.kubernetes.io/instance: k8up
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: k8up
    helm.sh/chart: k8up-4.8.4
  name: k8up-cleanup-roles
  namespace: syn-backup-k8up
rules:
  - apiGroups:
      - ''
    resources:
      - namespaces
    verbs:
      - get
      - list
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - rolebindings
      - roles
    verbs:
      - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade,post-delete
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: '3'
  labels:
    app.kubernetes.io/instance: k8up
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: k8up
    helm.sh/chart: k8up-4.8.4
  name: cleanup-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: k8up-cleanup-roles
subjects:
  - kind: ServiceAccount
    name: cleanup-service-account
    namespace: syn-backup-k8up
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade,post-delete
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: '4'
  labels:
    app.kubernetes.io/instance: k8up
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: k8up
    helm.sh/chart: k8up-4.8.4
  name: k8up-cleanup
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: k8up
        app.kubernetes.io/name: k8up
      name: k8up
    spec:
      containers:
        - args:
            - |
              #!/bin/bash

              NAMESPACES=$(kubectl get namespace -ojson | jq -r '.items[].metadata.name')

              for ns in $NAMESPACES
              do
                kubectl -n "$ns" delete rolebinding pod-executor-namespaced --ignore-not-found=true
                kubectl -n "$ns" delete role pod-executor --ignore-not-found=true
              done
          command:
            - sh
            - -c
          image: docker.io/bitnami/kubectl:latest
          imagePullPolicy: IfNotPresent
          name: k8up-cleanup
      restartPolicy: Never
      serviceAccountName: cleanup-service-account
